fastcgi_cache_path /var/run/NGINX-cache levels=1:2 keys_zone=CACHEZONE:10m inactive=60m max_size=40m;
fastcgi_cache_key "$scheme$request_method$host$request_uri";
add_header X-Cache $upstream_cache_status;

server {
	listen 80;
	listen 443 ssl http2;
	include snakeoil.conf;
	root /var/www/html;
	index index.php;
	server_name _;

        #access_log /var/log/NGINX/example.com.access.log; 
	#error_log /var/log/NGINX/example.com.error.log; 
	
        set $skip_cache 0; 
	# POST requests and URLs with a query string should always go to PHP
	if ($request_method = POST) {set $skip_cache 1;	} 
	if ($query_string != "") {set $skip_cache 1;}
        if ($request_uri ~* "/(administrator/|login.php)") {set $skip_cache 1;}
        if ($http_cookie = "PHPSESSID") {set $skip_cache 1;} 
	if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php |sitemap(_index)?.xml") {set $skip_cache 1;}
	if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass |wordpress_no_cache|wordpress_logged_in") {set $skip_cache 1;} 

	#location / {try_files $uri $uri/ /index.php?$args;} 
	location ~ \.php$ {
		include fastcgi-php.conf;
		fastcgi_pass unix:/run/php/php7.4-fpm.sock;
                fastcgi_cache CACHEZONE;
                fastcgi_cache_valid 200 203 301 302 2s; #60m
                fastcgi_cache_valid 404 10m;
                fastcgi_cache_min_uses  3;
                fastcgi_cache_revalidate on;
                proxy_cache_use_stale error timeout http_500;
                fastcgi_cache_background_update on;
                fastcgi_cache_lock on;
                fastcgi_cache_bypass $skip_cache; 
		fastcgi_no_cache $skip_cache;
                fastcgi_pass_header Set-Cookie;
		fastcgi_pass_header Cookie;
	}
        location ~ /purge(/.*) {fastcgi_cache_purge CACHEZONE "$scheme$request_method$host$1";} 
	location ~* ^.+.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {access_log off;log_not_found off;expires max;} 
	location = /robots.txt {access_log off;log_not_found off;}
	#location ~ /. {deny all;access_log off;log_not_found off;} 
	location ~ /\.ht {deny all;}
}
